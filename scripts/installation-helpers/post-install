#!/bin/bash
clear
#Colors
dgrey="\033[0;34m"
port="\033[0;33m"
RED="\033[1;31m"
GREEN="\033[2;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
RED="\033[0;31m"
ENDCOLOR="\033[0m"
echo -e $RED"#################################################################"$ENDCOLOR;
echo -e $YELLOW"   ____     ___    __  ____       __  _             ____  ____"$ENDCOLOR;
echo -e $YELLOW"  / __/__  / (_)__/ / / __ \___  / /_(_)__  ___    / __ \/ __/"$ENDCOLOR;
echo -e $YELLOW" _\ \/ _ \/ / / _  / / /_/ / _ \/ __/ / _ \/ _ \  / /_/ /\ \  "$ENDCOLOR;
echo -e $YELLOW"/___/\___/_/_/\_,_/  \____/ .__/\__/_/\___/_//_/  \____/___/  "$ENDCOLOR;
echo -e $YELLOW"                         /_/                                  "$ENDCOLOR;
echo -e $RED"#################################################################"$ENDCOLOR;
echo -e $BLUE"#                                 ||"$ENDCOLOR;
echo -e $BLUE"#                                 ||_________________________/'|"$ENDCOLOR;
echo -e $BLUE"#                               _| O======/                    |"$ENDCOLOR;
echo -e $BLUE"#  +-+-+-+-+ +--+-+ +-+-+-+-+  |_|               ============  |"$ENDCOLOR;
echo -e $BLUE"#  |F|u|c|k| |'e|m| |a|l|l|!|    |  __   ______________________|"$ENDCOLOR;
echo -e $BLUE"# +-+-+-+-+-+-+-+ +-+-+-+-+-+    |_/  )  (    |___||     O-   /"$ENDCOLOR;
echo -e $BLUE"# |C|a|r|p|e| |O|m|n|i|o|u|s|         (  )    /  / |_________/"$ENDCOLOR;
echo -e $BLUE"# +-+-+-+-+-+ +-+-+-+-+-+-+-+         (  )   /  /    | ) |   |"$ENDCOLOR;
echo -e $BLUE"#                                     (__)  /  /     \___|__("$ENDCOLOR;
echo -e $BLUE"#                                          /  /          )   \ "$ENDCOLOR;
echo -e $BLUE"#                                         /  /            )   \ "$ENDCOLOR;
echo -e $BLUE"#                                        /  /              )___\ "$ENDCOLOR;
echo -e $BLUE"#                                       /  / "$ENDCOLOR;
echo -e $BLUE"#                                      /__/"$ENDCOLOR;
echo -e $BLUE"#                                "$ENDCOLOR;
echo ""
echo -e $YELLOW"Thank you for choosing SolidOptionOS!"$ENDCOLOR;
echo ""
echo -e $YELLOW"This is a post installation script designed for the optionZ3ro drive you either purchased or downloaded online to give you a simpler, more robust user experience with the OS and its tools."$ENDCOLOR;
echo ""
echo -e $YELLOW"Let's get started"$ENCOLOR;
sleep 1
echo -e $YELLOW"Updating and upgrading.."$ENDCOLOR;
sleep 0.5
apt-get update && apt-get upgrade -y
echo ""
echo -e $YELLOW"Installing and configuring add-apt-repository"$ENDCOLOR;
echo ""
echo -e $BLUE"Installing python-software-properties and apt-file.."$ENDCOLOR;
sleep 0.5
apt-get install python-software-properties apt-file -y
echo ""
echo -e $BLUE"Running apt-file update.."$ENDCOLOR;
apt-file update
echo ""
echo -e $BLUE"Using apt-file search to find add-apt-repository"$ENDCOLOR;
sleep 1
apt-file search add-apt-repository
echo ""
echo -e $BLUE"Modifying add-apt-repository with ~/optionZ3ro/scripts/assets/add-apt-repository in /usr/sbin.."$ENDCOLOR;
cp /root/optionZ3ro/scripts/assets/add-apt-repository /usr/sbin/add-apt-repository
sleep 0.5
echo ""
echo -e $BLUE"Changing permissions and ownership.."$ENDCOLOR;
chmod o+x /usr/sbin/add-apt-repository
chown root:root /usr/sbin/add-apt-repository
echo ""
echo -e $GREEN"Add-Apt-Repository Added Successfully."$ENDCOLOR;
echo ""
echo -e $BLUE"Would you like to install custom themes and icons? [y/n]"$ENDCOLOR;
read CUSTOMTHEMES

if [[ $CUSTOMTHEMES = 'y' || $CUSTOMTHEMES = 'Y' ]] ; then
echo ""
/usr/sbin/add-apt-repository ppa:noobslab/themes
echo""
/usr/sbin/add-apt-repository ppa:alecive/antigone
echo ""
else

echo -e $BLUE"Okay. Maybe later."$ENDCOLOR;

fi

echo -e $BLUE"Installing preferred extras.."$ENDCOLOR;
sleep 1
apt-get install ieee-data unrar unace rar unrar p7zip zip unzip p7zip-full p7zip-rar file-roller filezilla filezilla-common gtk-recordmydesktop recordmydesktop remmina htop tor nethogs gdebi gpart parted gparted scrot lsb-release gcc g++ build-essential kbuild cmake make linux-headers-$(uname -r) firmware-ralink firmware-atheros firmware-linux firmware-realtek -y
echo ""

echo -e $YELLOW"Would you like to install screenfetch? "$ENDCOLOR;
read INSTALLSCREENFETCH

if [[ $INSTALLSCREENFETCH = 'y' || $INSTALLSCREENFETCH = 'Y' ]] ; then

echo -e $YELLOW"Installing and setting up screenfetch.."$ENDCOLOR
sleep 1
echo ""
cd ~/
echo -e $BLUE"Cloning screenfetch repository .. "$ENDCOLOR;
sleep 0.5
git clone https://github.com/KittyKatt/screenFetch.git  
sudo cp screenFetch/screenfetch-dev /usr/local/bin/screenfetch
echo ""
echo -e $YELLOW"Setting as executable in /usr/bin.."$ENDCOLOR;
chmod +x /usr/local/bin/screenfetch
echo ""
echo -e $GREEN"Screenfetch setup successfully!"$ENDCOLOR;

else

echo -e $BLUE"Okay. Maybe later."$ENDCOLOR;

fi

echo ""
echo -e $YELLOW"Woud you like to install Java SE? "$ENDCOLOR;
read INSTALLJAVA

if [[ $INSTALLJAVA = 'y' || $INSTALLJAVA = 'Y' ]] ; then

echo -e $YELLOW"Installing Java SE x64 version"$ENDCOLOR;
echo ""
echo -e $BLUE"Downloading the Java SE JDK from SolidOptionOS server.. "$ENDCOLOR;
cd ~/Downloads
wget http://solidoptionos.com/packages/jdk-7u79-linux-x64.tar.gz
echo -e $BLUE"Extracting.."$ENDCOLOR;
tar -xzvf jdk-7u79-linux-x64.tar.gz -C /opt
cd /opt/jdk1.7.0_79
sleep 1
echo -e $BLUE"Updating alternatives.."$ENDCOLOR;
update-alternatives --install /usr/bin/java java /opt/jdk1.7.0_79/bin/java 1
update-alternatives --install /usr/bin/javac javac /opt/jdk1.7.0_79/bin/javac 1
update-alternatives --install /usr/lib/mozilla/plugins/libjavaplugin.so mozilla-javaplugin.so /opt/jdk1.7.0_79/jre/lib/amd64/libnpjp2.so 1
update-alternatives --set java /opt/jdk1.7.0_79/bin/java
update-alternatives --set javac /opt/jdk1.7.0_79/bin/javac
update-alternatives --set mozilla-javaplugin.so /opt/jdk1.7.0_79/jre/lib/amd64/libnpjp2.so
sleep 1
echo -e $GREEN"Java SE JDK Installed Successfully!"$ENDCOLOR;
echo ""

else

echo -e $BLUE"Okay. Maybe later."$ENDCOLOR;

fi

echo -e $YELLOW"Would you like to download and install SolidOptionOS artwork? [y/n]"$ENDCOLOR;
read ARTWORK

if [[ $ARTWORK = 'y' || $ARTWORK = 'Y' ]] ; then

cd ~/Pictures
echo -e $BLUE"Downloading artwork for SolidOptionOS server.."$ENDCOLOR;
sleep 0.5
wget http://solidoptionos.com/pics/pics.zip
echo ""
echo -e $BLUE"Extracting.."$ENDCOLOR;
unzip pics.zip
rm -rf __MACOSX/
chmod 777 *
echo ""
echo -e $BLUE"Backing up originals.."$ENDCOLOR;
sleep 0.5
mkdir /usr/share/images/desktop-base/backup
cp /usr/share/images/desktop-base/* /usr/share/images/desktop-base/backup/
echo ""
echo -e $BLUE"Replacing default wallpapers and login screens.."$ENDCOLOR;
cp ~/Pictures/* /usr/share/images/desktop-base/
mkdir /usr/share/gnome-shell/theme/backup
mv /usr/share/gnome-shell/theme/KaliLogin.png /usr/share/gnome-shell/theme/backup/KaliLogin.png.bak
cp ~/Pictures/login-background.png /usr/share/gnome-shell/theme/KaliLogin.png
echo ""

else

echo -e $BLUE"Okay. Maybe some other time."$ENDCOLOR;
echo ""

fi

echo -e $BLUE"Would you like to add screenfetch and custom alias to your bashrc? [y/n]"$ENDCOLOR;
read BASHRC

if [[ $BASHRC = 'y' || $BASHRC = 'Y' ]] ; then

echo "screenfetch" >> ~/.bashrc
echo "alias ll='ls -Al'" >> ~/.bashrc
echo "alias goto-scripts='cd /root/optionZ3ro/scripts'" >> ~/.bashrc
echo "alias update-all='./root/optionZ3ro/scripts/solid-update" >> ~/.bashrc

else

echo -e $BLUE"Okay. Maybe later."$ENDCOLOR;

fi

echo -e $BLUE"Updating airodump-ng manufacturer data.."$ENDCOLOR;
airodump-ng-oui-update
echo ""
echo -e $BLUE"Wrapping up the post install.."$ENDCOLOR;
echo ""
echo -e $BLUE"[update-usbids]"$ENDCOLOR;
update-usbids
echo ""
echo -e $BLUE"[update-pciids]"$ENDCOLOR;
update-pciids
echo ""
echo -e $BLUE"[update-menus]"$ENDCOLOR;
update-menus
echo ""
echo -e $BLUE"[update-initramfs -uv]"$ENDCOLOR;
update-initramfs -uv
echo ""
echo -e $BLUE"[update-grub]"$ENDCOLOR;
update-grub
echo ""
echo -e $BLUE"[update-grub2]"$ENDCOLOR;
update-grub2
echo ""
echo -e $BLUE"#################################"$ENDCOLOR;
echo -e $YELLOW"#      Operation Complete.       #"$ENDCOLOR;
echo -e $BLUE"#################################"$ENDCOLOR;
exit
