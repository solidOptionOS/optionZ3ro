#!/bin/bash
#
# title: git-setup
# author:  Christopher Earnhart 
# author_email: chris@christopherearnhart.com
# author_website: http://christopherearnhart.com
#
# color vars
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
ENDCOLOR="\033[0m"
# end color vars

# git vars
gitToken="https://github.com/settings/tokens"
gitSSHKeys="https://github.com/settings/keys"
gitEmail_default="user@domain.com"
gitCredUsername_default='github_username'
gitCredPass_default='password'
defaultPush_default='simple'
mygithost_default='github.com'
gitCredFile_default='.git-credentials'
gitCredTimeout_default='3000'
continue_default='continue'
fail_default='no'
createGitCreds_default='Y'
xclip="xclip -selection clipboard"
BROWSER="firefox"
# end git vars

clear
echo -e $BLUE"#################################################################"$ENDCOLOR; 
echo -e $YELLOW"   ____     ___    __  ____       __  _             ____  ____"$ENDCOLOR;
echo -e $YELLOW"  / __/__  / (_)__/ / / __ \___  / /_(_)__  ___    / __ \/ __/"$ENDCOLOR;
echo -e $YELLOW" _\ \/ _ \/ / / _  / / /_/ / _ \/ __/ / _ \/ _ \  / /_/ /\ \  "$ENDCOLOR;
echo -e $YELLOW"/___/\___/_/_/\_,_/  \____/ .__/\__/_/\___/_//_/  \____/___/  "$ENDCOLOR;
echo -e $YELLOW"                         /_/                                  "$ENDCOLOR;
echo -e $BLUE"#################################################################"$ENDCOLOR;
echo ""
echo -e $YELLOW"This script will configure git for $USER." $ENDCOLOR;
echo ""
echo -e $YELLOW"Please set your home path: [e.g. $HOME] "$ENDCOLOR;
read HOMEPATH
echo -e $BLUE"Your home path is set to $HOMEPATH."$ENDCOLOR;
echo ""
 
configit_default="Y"
read -p "Would you like to configure your github config? [$configit_default,n] " configit_default
configit=${configit:-$configit_default}

if [[ $configit = 'y' || $configit = "$configit_default" ]]; then

  echo -e "Okay. Lets setup your github config"
  echo ""

  read -p "Enter your github username: [$gitCredUsername_default] " gitCredUsername_default
  gitCredUsername=${gitCredUsername:-$gitCredUsername_default}
  echo -e $gitCredUsername

  echo -e "Registering global user.name.."
  git config --global user.name $gitCredUsername
  echo ""

  read -p "Enter your github email address: [$gitEmail_default] " gitEmail_default
  gitEmail=${gitEmail:-$gitEmail_default} 
  echo -e $gitEmail

  echo -e "Registering global email.address.."
  git config --global user.email $gitEmail
  echo ""

  read -p "Select push.default [$defaultPush_default] " defaultPush_default
  defaultPush=${defaultPush:-$defaultPush_default}
  echo -e $defaultPush

  echo -e "Registering push.default $defaultpush."
  git config --global push.default $defaultpush
  echo ""

else

  echo -e "Okay. Maybe later.  We still need some basic info."
  echo ""
  read -p "Enter your github username: [$gitCredUsername_default] " gitCredUsername_default
  gitCredUsername=${gitCredUsername:-$gitCredUsername_default}
  echo -e $gitCredUsername

  read -p "Enter your github email address: [$gitEmail_default] " gitEmail_default
  gitEmail=${gitEmail:-$gitEmail_default}
  echo -e $gitEmail

fi

read -p "Would you like to create a credentials file for git? [$createGitCreds_default /n] " createGitCreds_default
createGitCreds=${createGitCreds:-$createGitCreds_default}

if [[ $createGitCreds = "$createGitCreds_default" || $createGitCreds = 'y' ]]; then

  echo ""
  read -p "Enter the name of the credentials file to create [$gitCredFile_default] " gitCredFile
  gitCredFile=${gitCredFile:-$gitCredFile_default}
  echo -e  $gitCredFile

  read -p "Enter your github host: [$mygithost_default] " mygithost_default
  mygithost=${mygithost:-$mygithost_default}
  echo -e $mygithost

  read -p "Enter your github password: [$gitCredPass_default] " gitCredPass_default
  gitCredPass=${gitCredPass:-$gitCredPass_default}
  echo -e $gitCredPass
  
  read -p "Enter cache timeout for credential-store: [$gitCredTimeout_default] " gitCredTimeout_default
  gitCredTimeout=${gitCredTimeout:-$gitCredTimeout_default}
  echo -e $gitCredTimeout

  echo -e "Creating $gitCredFile with username $gitCredUsername and password $gitCredPass to be stored in $HOMEPATH/$gitCredFile"
  echo ""

  str1="[credential]"
  str2="\thelper = store --file $HOMEPATH/$gitCredFile"
  str3="\thelper = cache --timeout $gitCredTimeout"
  str4="https://$gitCredUsername:$gitCredPass@$mygithost"
  
  echo -e $str1 >> "$HOMEPATH/.gitconfig"
  echo -e $str2 >> "$HOMEPATH/.gitconfig"
  echo -e $str3 >> "$HOMEPATH/.gitconfig"
  echo -e $str4 >> "$HOMEPATH/$gitCredFile"

  echo ""
  echo -e "Checking credentials.."
  cat "$HOMEPATH/.gitconfig"
  echo ""
  cat "$HOMEPATH/$gitCredFile"
  echo ""

else

  echo ""
  echo -e "Okay. Maybe later."
  echo ""

fi
  
echo -e "Checking for SSH keys.."
echo ""
ls -Al $HOMEPATH/.ssh
echo ""

echo -e "Generating a public/private rsa key pair.."
echo ""
ssh-keygen -t rsa -b 4096 -C "$gitEmail"
echo "" 

echo -e "Starting ssh-agent"
echo ""
sleep 1
eval "$(ssh-agent -s)"
echo ""

echo -e "Adding new SSH key to the ssh-agent.."
echo ""
ssh-add $HOMEPATH/.ssh/id_rsa
echo ""

echo -e "New key created."
echo ""
cat $HOMEPATH/.ssh/id_rsa.pub
echo ""

echo -e "Copying to clipboard.."
cat $HOMEPATH/.ssh/id_rsa.pub | $xclip 
echo ""

echo -e "When github appears in the browser, ADD A NEW SSH KEY, name it, and paste the contents of the clipboard into the key text-area."
echo ""
 
$BROWSER $gitSSHKeys >/dev/null 2>&1 &

read -p "When you have added the key [$continue_default] here " continue_default
continue=${continue:-$continue_default}

if [[ $continue = "$continue_default" ]] ; then

  echo -e "Okay, let us test the connection."
  echo ""
  sleep 1
  
  ssh -vT git@github.com
  echo ""

fi

echo -e "If you have authenticated, and the username in the message is yours,  then you have successfully set up your SSH Key!"
echo ""
sleep 1

read -p "Fail to authenticate? [y,$fail_default] " fail_default
fail=${fail:-$fail_default}

if [[ $fail = 'y' || $fail = 'Y' ]]; then

  echo ""
  echo -e "No problem.  Let us try a different method." 
  echo "" 
  
  echo -e "We are going to create a personal access token."
  echo ""

  $BROWSER $gitToken >/dev/null 2>&1 &
  
  echo -e "When you have generated the token, enter it here: "
  read -r gitToken
  echo ""
  
  echo -e "Got it. Importing the token."
  echo ""
  
  curl -u $gitCredUsername:$gitToken https://api.github.com/user
  echo ""

fi

echo ""
echo -e "SUCCESS! You are now setup and ready to start using git!"
exit
